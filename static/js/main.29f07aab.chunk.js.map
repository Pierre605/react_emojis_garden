{"version":3,"sources":["AddEmoji.jsx","Garden.jsx","AddGardens.jsx","Settings.jsx","Score.jsx","index.jsx"],"names":["AddEmoji","props","react_default","a","createElement","className","onClick","addEmo","id","Garden","Fragment","jardin","map","elem","key","delete","valeur","AddGardens","addGarden","Settings","name","defaultValue","onChange","toggle","value","growth","Score","scorelayout","state","lay","val","App","_this","Object","classCallCheck","this","_super","call","GenerateGarden","size","tab","i","push","setGrowthSpeed","event","speed","currentTarget","setState","growthSpeed","addEmoji","idg","console","log","items","farm","depart","j","length","select","document","querySelector","setTimeout","scoreEmos","RemoveEmoji","garden","newfarm","changeTheme","contain","getElementsByClassName","score","m","childNodes","classList","add","Lp","Lh","Ls","score1","countp","counts","counta","_this2","src_Settings","src_Score","src_Garden","src_AddEmoji","src_AddGardens","React","Component","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.29f07aab.chunk.js","sourcesContent":["import React from 'react'\nimport './AddEmoji.css'\n\nfunction AddEmoji(props) {\n    return (\n        <button className='button'onClick={() => props.addEmo(props.id)}>Plant an Emoji</button>\n    )\n}\n\n\nexport default AddEmoji","import React from 'react'\nimport './Garden.css'\n\n\nfunction Garden(props) {\n    return (\n        <>\n        <div className=\"wrapper\">\n            {props.jardin.map((elem) => { \n                return (\n                <div className=\"cell\" key={elem.id} onClick={() => props.delete(elem.id, props.id)}>{elem.valeur}</div>\n            )})}\n        </div>\n        </>\n        )\n}\n\n\n\nexport default Garden","import React from 'react'\nimport './AddGardens.css'\n\nfunction AddGardens(props) {\n    return (\n        <div>\n        <button className=\"button2\" onClick={props.addGarden}>Add Garden</button>\n        </div>\n    )\n}\n\n\n\nexport default AddGardens","import React from 'react'\nimport './Settings.css'\n\nfunction Settings(props) {\n    return(\n        <div className=\"settings\">\n            <span>Theme: </span>\n            <select name=\"theme\" defaultValue=\"plant\" onChange={props.toggle}>\n                <option value=\"\">Choisir th√®me</option>\n                <option value=\"plant\">Plants</option>\n                <option value=\"human\">Human</option>\n                <option value=\"sea\">Sea</option>\n            </select>\n            <span>\n                Growth speed (seconds): <input onChange={props.growth}/>\n            </span>\n        </div>\n    )\n}\n\n\n\nexport default Settings","import React from 'react'\nimport './Score.css'\n\nfunction Score(props) {\n    return(\n        <>\n        {props.scorelayout.map((elem) => {\n            if (elem.state === true) {\n                return (\n                    <div className=\"score\">{elem.lay} {elem.val}</div>\n                )\n            }\n            })\n        \n        }\n        </>\n    )\n}\n\n\n\nexport default Score","import React from 'react'\nimport ReactDOM from \"react-dom\"\nimport AddEmoji from './AddEmoji';\nimport Garden from './Garden'\nimport AddGardens from './AddGardens';\nimport './App.css'\nimport Settings from './Settings';\nimport Score from './Score';\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            farm: [],\n            growthSpeed: 2000,\n            score: [{id: \"human\", state: false, val: 0, lay: \"üôÇ: \"}, {id: \"sea\", state: false, val: 0, lay: \"üêü: \"}, {id: \"plant\", state: true, val: 0, lay: \"üå±: \"}]\n        }\n    }\n\n    GenerateGarden = (size) => {\n        let tab = []\n        for (let i = 0; i < size; i++) {\n            tab.push({id: i, valeur: null})\n        }\n        return tab\n    }\n    componentDidMount() {\n        const size_garden = 25\n        this.setState({farm: [this.GenerateGarden(size_garden)]})\n    }\n\n    setGrowthSpeed = (event) => {\n        let speed = event.currentTarget.value\n        this.setState({growthSpeed: speed*1000})\n    }\n\n    addEmoji = (idg) => {\n        console.log(idg)\n        let items = this.state.farm\n        let depart = []\n        for (let j = 0; j < items[idg].length; j++) {\n            if (items[idg][j].valeur == null) {\n                depart.push(j)\n            }\n        }\n\n        let select = document.querySelector(\"select\")\n\n        if (depart.length > 0 && select.value === \"plant\") {\n        let item = items[idg][depart[0]].valeur\n        item = 'üå±'\n        items[idg][depart[0]].valeur = item\n        this.setState({farm: items})\n        }\n        else if (depart.length > 0 && select.value === \"sea\") {\n            let item = items[idg][depart[0]].valeur\n            item = 'üêü'\n            items[idg][depart[0]].valeur = item\n            this.setState({farm: items})\n            }\n        else if (depart.length > 0 && select.value === \"human\") {\n            let item = items[idg][depart[0]].valeur\n            item = 'üò∂'\n            items[idg][depart[0]].valeur = item\n            this.setState({farm: items})\n            }\n\n        let growth = this.state.growthSpeed\n\n        setTimeout(() => {\n            switch(items[idg][depart[0]].valeur) {\n                case 'üå±': let item = items[idg][depart[0]].valeur\n                            item = 'üåø'\n                            items[idg][depart[0]].valeur = item\n                            this.setState({farm: items})\n            break;\n                case 'üêü': let item_sea = items[idg][depart[0]].valeur\n                            item_sea = 'üê¨'\n                            items[idg][depart[0]].valeur = item_sea\n                            this.setState({farm: items})\n            break;\n                case 'üò∂': let item_fc = items[idg][depart[0]].valeur\n                            item_fc = 'üôÇ'\n                            items[idg][depart[0]].valeur = item_fc\n                            this.setState({farm: items})\n            break;\n            }}, growth)\n        \n    \n\n        setTimeout(() => {\n            switch(items[idg][depart[0]].valeur) {\n                case 'üåø': let item2 = items[idg][depart[0]].valeur\n                            item2 = 'üå≥'\n                            items[idg][depart[0]].valeur = item2\n                            this.setState({farm: items})\n                break;\n                case 'üê¨': let item2sea = items[idg][depart[0]].valeur\n                            item2sea = 'üêã'\n                            items[idg][depart[0]].valeur = item2sea\n                            this.setState({farm: items})\n\n                break;\n                case 'üôÇ': let item2_fc = items[idg][depart[0]].valeur\n                            item2_fc = 'ü§†'\n                            items[idg][depart[0]].valeur = item2_fc\n                            this.setState({farm: items})\n                break;\n        }}, growth * 2)\n\n        this.scoreEmos()\n    }\n    \n\n    RemoveEmoji = (id, idg) => {\n        console.log(id, idg)\n        let items = this.state.farm\n        let item = items[idg][id].valeur\n        item = null\n        items[idg][id].valeur = item\n        this.setState({farm: items})\n        this.scoreEmos()\n    }\n\n    \n    addGarden = () => {\n        const garden = this.GenerateGarden(25)\n        let newfarm = this.state.farm\n        newfarm.push(garden)\n        this.setState({farm: newfarm})\n\n    }\n\n    changeTheme = () => {\n        let select = document.querySelector(\"select\")\n        let contain = document.getElementsByClassName(\"wrapper\")\n        let score = this.state.score\n        let items = this.state.farm\n\n        {for (let m = 0; m < score.length; m ++) {\n            if (select.value == score[m].id) {\n                score[m].state = true\n                this.setState({score: score})\n        }\n            else {\n                score[m].state = false\n                this.setState({score: score})\n            }\n        }}\n\n        {for (let j = 0; j < items.length; j++) {\n             for (let i = 0; i < 25; i++) {\n            if (select.value === \"human\") {\n                let cell = items[j][i].valeur\n                cell = null\n                items[j][i].valeur = cell\n                this.setState({farm: items})\n                contain[j].childNodes[i].className=''\n                contain[j].childNodes[i].classList.add('cell2')\n            }\n            if (select.value === \"sea\") {\n                let cell = items[j][i].valeur\n                cell = null\n                items[j][i].valeur = cell\n                this.setState({farm: items})\n                contain[j].childNodes[i].className=''\n                contain[j].childNodes[i].classList.add('cell3')\n            }\n            if (select.value === \"plant\") {\n                let cell = items[j][i].valeur\n                cell = null\n                items[j][i].valeur = cell\n                this.setState({farm: items})\n                contain[j].childNodes[i].className=''\n                contain[j].childNodes[i].classList.add('cell')\n            }\n        }\n        }}\n    }\n\n        scoreEmos = () => {\n            let Lp = []\n            let Lh = []\n            let Ls = []\n            let select = document.querySelector(\"select\")\n            let items = this.state.farm\n            let score1 = this.state.score\n            {for (let j = 0; j < items.length; j++) {\n             for (let i = 0; i < 25; i++) {\n                if (select.value === \"human\") {\n                    if (items[j][i].valeur === 'üò∂' || items[j][i].valeur === 'üôÇ' || items[j][i].valeur === 'ü§†') { \n                        Lh.push(items[j][i])\n                        let countp = score1[0].val\n                        countp = Lh.length\n                        score1[0].val = countp\n                        this.setState({score: score1})\n                }\n            }\n                // else if (items[j][i].valeur === 'üôÇ') {\n                //     counters.count3 += 1\n                //     this.setState({count: counters})\n                // }\n                // if (items[j][i].valeur === 'ü§†') {\n                //     counters.count3 += 1\n                //     this.setState({count: counters})\n                // }\n            \n\n                else if (select.value === \"sea\") {\n                    if (items[j][i].valeur === 'üêü' || items[j][i].valeur === 'üê¨' || items[j][i].valeur === 'üêã') {\n                        Ls.push(items[j][i])\n                        let counts = score1[1].val\n                        counts = Ls.length\n                        score1[1].val = counts\n                        this.setState({score: score1})\n                }\n            }\n                // else if (items[j][i].valeur === 'üê¨') {\n                //     counters.count6 += 1\n                //     this.setState({count: counters})\n                // }\n                // else if (items[j][i].valeur === 'üêã') {\n                //     counters.count6 += 1\n                //     this.setState({count: counters})\n                // }\n            \n                \n                else if (select.value === \"plant\") {\n                    if (items[j][i].valeur === 'üå≥' || items[j][i].valeur === 'üåø' || items[j][i].valeur === 'üå±') {\n                        Lp.push(items[j][i])\n                        let counta = score1[2].val\n                        counta = Lp.length\n                        score1[2].val = counta\n                        this.setState({score: score1})\n                }\n            }\n                // else if (items[j][i].valeur === 'üåø') {\n                //     counters.count9 += 1\n                //     this.setState({count: counters})\n                // }\n                // else if (items[j][i].valeur === 'üå≥') {\n                //     counters.count9 += 1\n                //     this.setState({count: counters})\n                //     console.log(this.state.count.count9)\n                // }\n            \n        }\n        }\n        }\n}\n\n    render() {\n        return (  \n            <>\n            <h2>My Emoji Garden</h2>\n            <Settings toggle={this.changeTheme} growth={this.setGrowthSpeed}/>\n            <Score scorelayout={this.state.score}/>\n            <div className=\"aside\">\n            {this.state.farm.map((garden, i) => { \n                return (\n                    <div className=\"aerer\" key={i}>\n                    <Garden id={i} jardin={garden} delete={this.RemoveEmoji}/>\n                    <AddEmoji id={i} addEmo={this.addEmoji}/>\n                    </div>\n                    )})}\n            </div>\n            <div>\n            <AddGardens addGarden={this.addGarden}/>\n            </div>\n            </>\n        )\n      \n}}\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}